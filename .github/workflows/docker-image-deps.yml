name: Build deps for armv5-homeassistant

on: 
  workflow_dispatch:
  repository_dispatch:
    types: Build deps for armv5-homeassistant
  
jobs:
  build:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Find dependencies versions
        run: |
          export TAG=$(curl --silent https://api.github.com/repos/home-assistant/core/releases | jq -r 'map(select(.prerelease==false)) | first | .tag_name')
          export WHEELS_LIST=('CRYPTOGRAPHY' 'PANDAS' 'NUMPY' 'UV' 'AV')
          for wheel in "${WHEELS_LIST[@]}"; do 
            export ${wheel}_VER=$(curl --silent "https://raw.githubusercontent.com/home-assistant/core/$TAG/homeassistant/package_constraints.txt" | grep -m 1 -i "${wheel}" | awk -F'=' '{print $NF}' | tr -d '\n')
          done
          export UV_VER=$(curl -s https://pypi.org/pypi/uv/json | jq -r '.info.version')
          for wheel in "${WHEELS_LIST[@]}"; do w="${wheel}_VER"; echo "${wheel}_VER=${!w}" >> $GITHUB_ENV; done
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build deps
        run: |
          export DOCKER_BUILDKIT=0 
          sudo apt install -y qemu-user-static binfmt-support

          sudo update-binfmts --install armv5 /usr/bin/qemu-arm-static \
          --magic "\x7f\x45\x4c\x46\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x28\x00" \
          --mask "\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff" \
          --fix-binary yes

          uname -m

          export LINK=$(curl --silent https://api.github.com/repos/rara64/armv5-homeassistant/actions/artifacts | jq -r '.artifacts[] | select(.name == "maturin") | .archive_download_url' | head -n 1)
          curl -L -H "Authorization: token ${{ secrets.WHEELS_TOKEN }}" -o maturin.zip "$LINK" || echo 'deps download failed'
          7z e maturin.zip -o./maturin -y || echo 'maturin extract failed'

          export MATURIN_VER=$(curl -s https://pypi.org/pypi/maturin/json | jq -r '.info.version')
          export MATURIN_BUILD_VER=$(cat ./maturin/maturin_ver.txt)
          export OUTDATED_MATURIN=0
          if [[ "${MATURIN_VER}" != "${MATURIN_BUILD_VER}" ]]; then
            export OUTDATED_MATURIN=1
            echo "OUTDATED_MATURIN=$OUTDATED_MATURIN" >> $GITHUB_ENV
            echo "Outdated Maturin! Expected: ${MATURIN_VER} Got: ${MATURIN_BUILD_VER}"
            exit 0
          fi
          echo "OUTDATED_MATURIN=$OUTDATED_MATURIN" >> $GITHUB_ENV
          export MATURIN_PATH = ${find *.whl ./maturin}

          docker buildx build --load --tag wheels --build-arg NUMPY_VER=${{ env.NUMPY_VER }} --build-arg MATURIN=$MATURIN_PATH --build-arg PANDAS_VER=${{ env.PANDAS_VER }} --build-arg AV_VER=${{ env.AV_VER }} --build-arg CRYPTOGRAPHY_VER=${{ env.CRYPTOGRAPHY_VER }} --build-arg UV_VER=${{ env.UV_VER }} --platform linux/arm/v5 --allow security.insecure --no-cache -f ./deps/Dockerfile .
      - name: Dispatch maturin build
        if: ${{ env.OUTDATED_MATURIN == 1 }}
        run : |
          curl -XPOST -u "${{ secrets.DOCKER_USERNAME }}:${{ secrets.WHEELS_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/rara64/armv5-homeassistant/dispatches --data '{"event_type": "Build maturin for armv5-homeassistant"}'
      - name: Extract wheels
        if: ${{ env.WHEELS_NEEDED == '0' }}
        shell: bash
        run: |
          docker create --name wheels wheels
          mkdir wheels
          docker cp wheels:./root/.cache/pip/wheels wheels
          docker cp wheels:./wheels wheels
      - name: Upload wheels
        if: ${{ env.WHEELS_NEEDED == '0' }}
        uses: actions/upload-artifact@v4
        with:
          name: deps
          path: |
            ./wheels
      - name: Dispatch armv5-homeassistant on ARM
        if: ${{ env.WHEELS_NEEDED == '0' }}
        run: |
          sleep 90
          curl -XPOST -u "${{ secrets.DOCKER_USERNAME }}:${{ secrets.WHEELS_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/rara64/armv5-homeassistant/dispatches --data '{"event_type": "Build armv5-homeassistant"}'

